{"version":3,"sources":["components/link_to_get_json/linktogetjson.js","components/helpers/helpers.js","components/json_viewer/data-to-show/arrayviewer.js","components/json_viewer/data-to-show/datatoshow.js","components/json_viewer/jsonviewer.js","App.js","reportWebVitals.js","index.js"],"names":["LinkToGetJSON","_ref","submitNewLink","linkInput","useRef","react_default","a","createElement","action","method","onSubmit","event","preventDefault","current","value","ref","type","name","placeholder","onChange","equalSet","firstSet","secondSet","counter","size","Object","toConsumableArray","every","x","has","checkIfArrayItemsAreAllObjects","array","finalKeys","onlyContainsObjects","objectsShareAtLeastTwoAttributes","forEach","item","index","Array","isArray","isItemObject","Set","keys","concat","ArrayViewer","arrayToView","Fragment","map","oneKey","key","trim","jsonviewer","JSONToView","row","style","border","display","textAlign","JSON","stringify","DataToShow","length","arrayviewer","JSONViewer","loading","setLoading","useEffect","bordercolor","datatoshow","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","linkToGetJSON","setLinkToGetJSON","_useState5","parse","one","_useState6","setJSONToView","fetch","then","response","json","data","console","log","catch","err","className","linktogetjson","newLink","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ad356edb.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nfunction LinkToGetJSON({ submitNewLink }) {\r\n  let linkInput = useRef();\r\n  return (\r\n    <div>\r\n      <form\r\n        action=\"\"\r\n        method=\"get\"\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          submitNewLink(linkInput.current ? linkInput.current.value : \"\");\r\n        }}\r\n      >\r\n        <input\r\n          ref={linkInput}\r\n          type=\"text\"\r\n          name=\"link-to-get-json\"\r\n          placeholder=\"Put a link to get a JSON from\"\r\n          value={\"https://api.github.com/users/mralexgray/repos\"}\r\n          onChange={() => {}}\r\n        />\r\n        <input type=\"submit\" value=\"Get JSON\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkToGetJSON;\r\n","const equalSet = (firstSet, secondSet) => {\r\n  let counter = 0;\r\n  firstSet.size === secondSet.size &&\r\n    [...firstSet].every((x) => {\r\n      if (secondSet.has(x)) {\r\n        counter++;\r\n      }\r\n      return secondSet.has(x);\r\n    });\r\n  return counter;\r\n};\r\n\r\nexport function isItemObject(item) {\r\n  return item && typeof item === \"object\" && !Array.isArray(item);\r\n}\r\nexport function checkIfArrayItemsAreAllObjects(array) {\r\n  let finalKeys = [];\r\n  let onlyContainsObjects = true,\r\n    objectsShareAtLeastTwoAttributes = true;\r\n  // If it contains any item other than objects\r\n  array.forEach((item, index) => {\r\n    if (!isItemObject(item)) {\r\n      onlyContainsObjects = false;\r\n      return onlyContainsObjects && objectsShareAtLeastTwoAttributes;\r\n    }\r\n    // If all objects share at least two attributes\r\n    if (\r\n      index !== 0 &&\r\n      equalSet(\r\n        new Set(Object.keys(item)),\r\n        new Set(Object.keys(array[index - 1]))\r\n      ) < 3\r\n    ) {\r\n      objectsShareAtLeastTwoAttributes = false;\r\n      return onlyContainsObjects && objectsShareAtLeastTwoAttributes;\r\n    }\r\n    finalKeys = [...new Set([...finalKeys, ...Object.keys(item)])];\r\n  });\r\n\r\n  return [onlyContainsObjects && objectsShareAtLeastTwoAttributes, finalKeys];\r\n}\r\n","import React from \"react\";\r\nimport { checkIfArrayItemsAreAllObjects } from \"../../helpers/helpers\";\r\nimport JSONViewer from \"../jsonviewer\";\r\n\r\nfunction ArrayViewer({ arrayToView }) {\r\n  if (checkIfArrayItemsAreAllObjects(arrayToView)[0]) {\r\n    // console.log(arrayToView);\r\n    // Render Keys\r\n    return (\r\n      <>\r\n        <thead>\r\n          <tr>\r\n            <td> </td>\r\n            {checkIfArrayItemsAreAllObjects(arrayToView)[1].map((oneKey) => {\r\n              return <td key={oneKey}>{oneKey.trim()}</td>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {arrayToView.map((item, index) => {\r\n            return (\r\n              <tr key={index + \"_\" + item[Object.keys(item)[0]]}>\r\n                <td>{index}</td>\r\n                {checkIfArrayItemsAreAllObjects(arrayToView)[1].map(\r\n                  (oneKey) => {\r\n                    return (\r\n                      <td key={index + oneKey}>\r\n                        <JSONViewer JSONToView={item[oneKey]} />\r\n                      </td>\r\n                    );\r\n                  }\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </>\r\n    );\r\n  } else {\r\n    return arrayToView.map((row, index) => {\r\n      return (\r\n        <tr\r\n          key={index + \"_key\"}\r\n          style={{ border: \"1px solid black\", display: \"block\" }}\r\n        >\r\n          <td>{index}</td>\r\n          <td style={{ textAlign: \"left\" }}>{JSON.stringify(row)}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default ArrayViewer;\r\n","import React from \"react\";\r\nimport ArrayViewer from \"./arrayviewer\";\r\n\r\nfunction DataToShow({ JSONToView }) {\r\n  if (Array.isArray(JSONToView) && JSONToView.length > 0) {\r\n    return <ArrayViewer arrayToView={JSONToView} />;\r\n  }\r\n}\r\n\r\nexport default DataToShow;\r\n","import React, { useEffect } from \"react\";\r\nimport DataToShow from \"./data-to-show/datatoshow\";\r\nfunction JSONViewer({ JSONToView, loading, setLoading }) {\r\n  useEffect(() => {\r\n    if (setLoading) setLoading(false);\r\n  }, [JSONToView]);\r\n  if (!loading) {\r\n    if (typeof JSONToView === \"boolean\") {\r\n      return <>{JSON.stringify(JSONToView)}</>;\r\n    }\r\n    if (typeof JSONToView !== \"object\") {\r\n      // not object && not array\r\n      return <>{JSONToView}</>;\r\n    }\r\n    if (typeof JSONToView === \"object\" && !Array.isArray(JSONToView)) {\r\n      return <>Object</>;\r\n    }\r\n    return (\r\n      <table border={2} bordercolor={\"black\"}>\r\n        <DataToShow JSONToView={JSONToView} />\r\n      </table>\r\n    );\r\n  }\r\n  //   return \"Loading\";\r\n}\r\n\r\nexport default JSONViewer;\r\n","import React, { useState, useEffect } from \"react\";\nimport LinkToGetJSON from \"./components/link_to_get_json/linktogetjson\";\nimport JSONViewer from \"./components/json_viewer/jsonviewer\";\nimport \"./app.css\";\n\nfunction App() {\n  let [loading, setLoading] = useState(true);\n  let [linkToGetJSON, setLinkToGetJSON] = useState(\"\"); // This is the link to fetch\n  let [JSONToView, setJSONToView] = useState(\n    JSON.parse(JSON.stringify({ one: 1 }))\n  ); // this is the json response to view\n  useEffect(() => {\n    setLoading(true);\n    // This is where the fetch process are going to work\n    fetch(linkToGetJSON)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setJSONToView(data);\n      })\n      .catch((err) => {\n        // console.log(err);\n        console.log(\"Sorry, This Link Doesn't Return Json Type!\");\n      });\n  }, [linkToGetJSON]);\n  const submitNewLink = (newLink) => {\n    // Add the new link - maybe we make some validation\n    setLinkToGetJSON(newLink);\n  };\n  return (\n    <div className=\"container\">\n      <LinkToGetJSON submitNewLink={submitNewLink} />\n      <JSONViewer\n        JSONToView={JSONToView}\n        loading={loading}\n        setLoading={setLoading}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}